@mixin size($width, $height: $width) {
    height: $height;
    width: $width;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alph(opacity = $opacity-ie); //IE8
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform($args...) {
  -webkit-transform: $args;
  -moz-transform: $args;
  -ms-transform: $args;
  -o-transform: $args;
  transform: $args;
}


/////////////////////////////////////////////////
// Vendor Prefixing
// Usage:
//      @include prefix('box-sizing', 'border-box', moz webkit)
//      @include prefix('box-sizing', 'border-box')
@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
  @if $vendors {
    @each $vendor in $vendors {
      #{"-" + $vendor + "-" + $property}: #{$value};
    }
  }
  @if $default {
    #{$property}: #{$value};
  }
}


/////////////////////////////////////////////////
// Positioning
// Usage:
//      @include absolute(top 100% left 0);
//      @include fixed(top 0 right 0);
@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// Positioning helpers
@mixin absolute($args: '') {
  @include position(absolute, $args);
}

@mixin fixed($args: '') {
  @include position(fixed, $args);
}

@mixin relative($args: '') {
  @include position(relative, $args);
}


@mixin hamburger( $height, $color, $hover_color ){
    cursor: pointer;
    height: $height;
    position: relative;
    &:before {
        @include size(100%, 60%);
        @include absolute(left 5px top 50%);
        content: '';
        background: linear-gradient(
            to bottom,
            $color, $color 20%,
            transparent 20%, transparent 40%,
            $color 40%, $color 60%,
            transparent 60%, transparent 80%,
            $color 80%, $color 100%
        );
        @include transform(translate(0, -50%))
    }
}
